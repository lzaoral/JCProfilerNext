// SPDX-License-Identifier: GPL-3.0-only

plugins {
    id 'application'
    id 'idea'
}

// TODO: shadow plugin?

group 'org.crocs'
version '1.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

repositories {
    mavenCentral()
    maven { url "https://javacard.pro/maven" }
    maven { url "https://deadcode.me/mvn" }
}

dependencies {
    // commandline arguments parsing
    implementation 'com.beust:jcommander:1.82'

    // Spoon
    implementation 'fr.inria.gforge.spoon:spoon-core:9.1.0' // last version that supports Java 8

    // for logging
    implementation 'org.slf4j:slf4j-api:2.0.13'
    implementation 'org.apache.logging.log4j:log4j-api:2.24.1'
    implementation 'org.apache.logging.log4j:log4j-core:2.24.1'
    implementation 'org.apache.logging.log4j:log4j-slf4j2-impl:2.23.1'

    // for input generation
    implementation 'com.github.curious-odd-man:rgxgen:2.0'

    // applet installation
    implementation 'org.apache.ant:ant:1.10.15'
    implementation 'com.github.martinpaljak:ant-javacard:21.12.31'
    implementation 'com.github.martinpaljak:gptool:20.08.12'

    // use the latest JNA release to support Apple Silicon MacBooks
    implementation 'net.java.dev.jna:jna:5.14.0'

    // card connection
    implementation 'com.klinec:javacard-tools:1.0.5'
    implementation 'com.klinec:jcardsim:3.0.6.0'

    // apache commons
    implementation 'commons-io:commons-io:2.17.0'
    implementation 'org.apache.commons:commons-csv:1.11.0'
    implementation 'org.apache.commons:commons-math3:3.6.1'
    implementation 'org.apache.commons:commons-text:1.12.0'

    // velocity
    implementation 'org.apache.velocity:velocity-engine-core:2.3'

    // unit tests
    testImplementation 'org.junit.jupiter:junit-jupiter:5.11.1'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

compileJava {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

application {
    mainClass = 'jcprofiler.Main'
}

run {
    standardInput = System.in
}

jar {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

    exclude 'META-INF/*.RSA'
    exclude 'META-INF/*.SF'
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.MF'

    manifest.attributes(
        'Main-Class': 'jcprofiler.Main',
        'Multi-Release': 'true'
    )
}

test {
    useJUnitPlatform()
}
